scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + theme(aspect.ratio = .5)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + theme(aspect.ratio = .1)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + theme(aspect.ratio = .2)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + theme(aspect.ratio = .25)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df3, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
mrce.df2 <- mrce.res2 %>% group_by(rho, model) %>% summarise(err = mean(err))
mrce.res2 <- read.csv("sim-data/mrce-case2.csv")
res.df2 <- read.csv("sim-data/results-case2.csv")
mrce.res4 <- read.csv("sim-data/mrce-case4.csv")
res.df4 <- read.csv("sim-data/results-case4.csv")
mrce.df2 <- mrce.res2 %>% group_by(rho, model) %>% summarise(err = mean(err))
colnames(mrce.df3) <- c("rho", "variable", "err")
all.df2 <- res.df2 %>% select(rho, me_ls, me_gl, me_ridge_all, me_mv) %>%
mutate(OLS = me_ls, GroupLasso = me_gl, Ridge = me_ridge_all, MrRCE = me_mv) %>%
select(rho, OLS, GroupLasso, Ridge, MrRCE) %>%
melt(id.vars = "rho") %>%
group_by(rho, variable) %>%
summarise(err = mean(value))
all.df2 <- rbind(all.df2, mrce.df2)
mrce.df4 <- mrce.res4 %>% group_by(rho, model) %>% summarise(err = mean(err))
colnames(mrce.df4) <- c("rho", "variable", "err")
all.df4 <- res.df4 %>% select(rho, me_ls, me_gl, me_ridge_all, me_mv) %>%
mutate(OLS = me_ls, GroupLasso = me_gl, Ridge = me_ridge_all, MrRCE = me_mv) %>%
select(rho, OLS, GroupLasso, Ridge, MrRCE) %>%
melt(id.vars = "rho") %>%
group_by(rho, variable) %>%
summarise(err = mean(value))
all.df4 <- rbind(all.df4, mrce.df4)
all.df2['case'] <- 2
all.df4['case'] <- 4
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df2, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
mrce.df2 <- mrce.res2 %>% group_by(rho, model) %>% summarise(err = mean(err))
colnames(mrce.df2) <- c("rho", "variable", "err")
all.df2 <- res.df2 %>% select(rho, me_ls, me_gl, me_ridge_all, me_mv) %>%
mutate(OLS = me_ls, GroupLasso = me_gl, Ridge = me_ridge_all, MrRCE = me_mv) %>%
select(rho, OLS, GroupLasso, Ridge, MrRCE) %>%
melt(id.vars = "rho") %>%
group_by(rho, variable) %>%
summarise(err = mean(value))
all.df2 <- rbind(all.df2, mrce.df2)
mrce.df4 <- mrce.res4 %>% group_by(rho, model) %>% summarise(err = mean(err))
colnames(mrce.df4) <- c("rho", "variable", "err")
all.df4 <- res.df4 %>% select(rho, me_ls, me_gl, me_ridge_all, me_mv) %>%
mutate(OLS = me_ls, GroupLasso = me_gl, Ridge = me_ridge_all, MrRCE = me_mv) %>%
select(rho, OLS, GroupLasso, Ridge, MrRCE) %>%
melt(id.vars = "rho") %>%
group_by(rho, variable) %>%
summarise(err = mean(value))
all.df4 <- rbind(all.df4, mrce.df4)
all.df2['case'] <- 2
all.df4['case'] <- 4
cols <- c(MrRCE = "#ea645d", Ridge = "#e8b27d", GroupLasso = "#83bc7e",
OLS = "#557fa2", MRCE = "#8354a1")
p <- rbind(all.df2, all.df4) %>%
ggplot(aes(rho, err, color = variable, shape = variable, linetype = variable)) +
geom_point(size = 2) +
geom_line(size = .65) +
labs(title = "", x = expression(rho),
y = "ME", color = "Model", shape = "Model", linetype = "Model") +
theme_classic() +
scale_color_manual(values = cols) +
theme(legend.position = "bottom") +
theme(text = element_text(size = 15), legend.text = element_text(size = 12.5)) +
facet_wrap(~case, nrow = 2, scales = "free", shrink = FALSE) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
p
install.packages(c("plotly", "DT", "shinythemes", "markdown"))
shiny::runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
importance <- data.frame(method = c("rf", "rf", "shap", "shap"),
var = c("a", "b", "a", "b"),
imp = c(1, 2, 1, 1))
View(importance)
as.vector(importance$method %>% unique())
library(shiny)
library(shinythemes)
library(markdown)
#library(ggvis)
library(DT)
library(plotly)
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
library(ggvis)
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
library(reshape2)
library(dplyr)
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
library(shiny)
library(shinythemes)
library(markdown)
library(DT)
library(plotly)
library(dplyr)
library(reshape2)
library(shiny)
library(shinythemes)
library(markdown)
library(DT)
library(plotly)
library(dplyr)
library(reshape2)
results <- data.frame(x = 1:100, y = rnorm(100))
importance <- data.frame(method = c("rf", "rf", "shap", "shap"),
var = c("a", "b", "a", "b"),
imp = c(1, 2, 1, 1))
methods <- as.vector(importance$method %>% unique())
server <- function(input, output, session) {
## update UI
updateSelectInput(session, "method", "Method", choices = methods)
get.vi <- reactive({
# get vi for given method
n_vars <- input$n
method_ <- input$method
data <- importance %>%
filter(method == method_) %>%
arrange(-imp) %>% head(n_vars)
print(data)
return (data)
})
output$vi_plot <- renderPlotly({
vline <- function(x = 0, color = "black") {
# plot vertical line
list(
type = "line",
y0 = 0,
y1 = 1,
yref = "paper",
x0 = x,
x1 = x,
line = list(color = color)
)
}
plot1 <- get.vi() %>%
arrange(imp) %>%
plot_ly(x = ~imp,
y = ~reorder(var, imp),
type = 'bar',
orientation = 'h',
opacity = .75,
showlegend = FALSE,
marker = list(line = list(color = 'black', width = 1))) %>%
layout(title = "<b>Variable Importance</b>",
tickfont = list(size = 20),
showlegend = FALSE,
xaxis = list(title = ""),
yaxis = list(title = "", showticklabels = TRUE),
paper_bgcolor = "transparent",
shapes = list(vline())
)
plot2 <- results %>%
plot_ly(
x = ~x,
y = ~y,
type = "scatter",
mode = "markers",
#color = ~value
marker = list(color = ~y, alpha = .2)
)
subplot(plot1, plot2)
})
# table
output$table <- renderDataTable(get.vi())
}
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Downloads')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Downloads')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
runApp('Desktop/test')
shiny::runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
runApp('Desktop/mfml-project/shiny/mfml-vi')
results <- read.csv("../results/clf_results_full.csv")
getwd()
dirname(parent.frame(2)$ofile)
dirname()
dirname(parent.frame(2))
parent.frame(2)
parent.frame(2)$ofile
parent.frame(1)$ofile
getSrcDirectory()[1]
utils::getSrcDirectory()[1]
utils::getSrcDirectory()
set_wd <- function() {
library(rstudioapi) # make sure you have it installed
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
set_wd
set_wd()
results <- read.csv("../results/clf_results_full.csv")
getwd()
results <- read.csv("../../results/clf_results_full.csv")
importance <- read.csv("../../results/clf_vi.csv")
importance_melt <- importance %>% melt(id = "variable", variable.name = "method")
View(importance_melt)
results %>% head()
results %>% head()
results %>% filter(model = "RF") %>% group_by(k, method) %>% colMeans()
results %>% filter(model == "RF") %>% group_by(k, method) %>% colMeans()
results %>% filter(model == "RF") %>% group_by(k, method) %>% select(-model) %>% colMeans()
results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method) %>% colMeans()
results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method) %>% summarise(mean())
colMeans(results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method))
results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method) %>% mean()
results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method) %>% select(ACC) %>% mean()
results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method) %>% summarise(Mean = mean(ACC))
runApp()
runApp()
results %>% filter(model == "RF") %>% select(-model) %>% select(ACC, k, method) %>% group_by(k, method) %>% mean()
runApp()
runApp()
runApp()
results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method) %>% summarise(Mean = mean(ACC))
data.frame(results %>% filter(model == "RF") %>% select(-model) %>% group_by(k, method) %>% summarise(Mean = mean(ACC)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
